---
- hosts: elevate
  vars:
    project_path: /opt/frontend/mohini-app
    root_path: /opt/frontend
  tasks:
    - name: Slurp host file
      slurp:
        src: "/opt/backend/deployment/.token"
      register: slurpfile

    - name: Run vault credentials
      shell: "curl --location --request GET '{{ vaultAddress }}mohini-frontend' --header 'X-Vault-Token: {{ slurpfile['content'] | b64decode }}' | jq '.data' > '{{root_path}}/data2.json'"
      register: vaultCurl

    - name: Ensure project directory exists
      file:
        path: "{{ project_path }}"
        state: directory
        mode: '0755'

    - name: Change directory to project path
      shell: "cd {{ project_path }}"

    - name: Fetch the latest code
      git:
        repo: https://github.com/5Amogh/mohini-app-frontend
        dest: "{{ project_path }}"
        version: "{{ gitBranch }}"
        force: yes

    - name: Remove node_modules folder
      shell: "rm -rf {{ project_path }}/node_modules"

    - name: Clear npm cache
      shell: "npm cache clean --force"

    - name: Install dependencies
      shell: "cd {{ project_path }} && npm i --force"

    - name: Set permission for json2env.sh
      shell: chmod 744 {{ project_path }}/src/scripts/json2env.sh

    - name: Generate .env
      shell: cat {{ root_path }}/data2.json | jq '.data' > {{ project_path }}/.env-cmdrc
      register: envConfig

    - debug: msg=" cred {{ envConfig }} "

    - name: Fetch pm2 config file
      shell: "curl --location --request GET '{{ vaultAddress }}mohiniPortalPM2Config' --header 'X-Vault-Token: {{ slurpfile['content'] | b64decode }}' | jq '.data.data' > '{{ project_path }}/pm2.config.json'"
      register: pm2

    - name: Build mohini app
      shell: "cd {{ project_path }} && npm run build-prod"

    - name: Start pm2
      shell: "cd {{ project_path }} && pm2 start pm2.config.json"